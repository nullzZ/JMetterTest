<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="create" name="JMTest">
	<property environment="env" />
	<property name="target" value="1.7" />
	<property name="source" value="1.7" />
	<property name="project-name" value="JMTest" />
	<property name="build.dir" value="build" />
	<property name="dist" value="dist" />
	<property name="lib.dir" value="lib" />
	<property name="classes.dir" value="bin" />
	<property name="src" value="src/test" />

	<echo>${ant.java.version}</echo>
	<echo>$</echo>

	<!--设置Classpath-->
	<path id="lib-classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!--执行清除操作-->
	<target name="clean">
		<echo>执行清除历史文件操作</echo>
		<delete dir="${build.dir}" />
		<delete dir="${dist}" />
	</target>

	<!--执行初始化操作-->
	<target name="init" depends="clean">
		<echo>执行创建文件夹操作：build,dist</echo>
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist}" />
		<copy todir="${build.dir}">
			<fileset dir="${src}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>


	<!--编译-->
	<target name="buildServer" depends="init">
		<echo>编译</echo>
		<javac destdir="${build.dir}" debug="true" encoding="UTF-8">
			<src path="${src}" />
			<classpath refid="lib-classpath" />

		</javac>
	</target>

	<!--将build的文件copy到classes下-->
	<target name="copyBuild" depends="buildServer">
		<copy todir="${classes.dir}">
			<fileset dir="${build.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>



	<!--创建文件-->
	<target name="create" depends="copyBuild">
		<echo>生成jar文件</echo>

		<copy todir="${dist}/lib">
			<fileset dir="${lib.dir}" />
		</copy>

		<pathconvert property="mf.classpath" pathsep=" ">
			<mapper>
				<chainedmapper>
					<!-- jar包文件只留文件名，去掉目录信息 -->
					<flattenmapper />
					<!-- add lib/ prefix -->
					<globmapper from="*" to="lib/*" />
				</chainedmapper>
			</mapper>
			<path refid="lib-classpath" />
		</pathconvert>

		<jar destfile="${dist}/${project-name}.jar" basedir="${classes.dir}">
			<include name="**/*" />
			<manifest>
				<!--<attribute name="Main-Class" value="${mainclass}" />-->
				<attribute name="Class-Path" value="${mf.classpath}" />
			</manifest>
		</jar>
		<echo>生成jar文件........成功</echo>
	</target>

</project>

